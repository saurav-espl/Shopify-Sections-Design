<style>
  .section-{{ section.id }} {
    background: {{ section.settings.bg_color }};
  }

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .custom-tabs-wrapper {
    margin-top: 2rem;
  }

  .custom-tabs-nav {
    display: grid;
    gap: 1.5rem;
    background: #eee;
    margin-bottom: 1rem;
    padding: 5px;
    border-radius: 10px;
    grid-template-columns: 1fr 1fr 1fr;
  }

  .custom-tabs-button {
    background: none;
    border: none;
    font-weight: 600;
    padding: 0.75rem 1rem;
    cursor: pointer;
    color: #333;
    transition: border-bottom 0.3s ease;
    width: 100%;
    font-family: 'Inter';
  }
  .custom-tabs-button.active {
    background: white;
    border-radius: 10px;
  }

  .custom-tabs-content-wrapper {
    margin-top: 2rem;
  }

  .custom-tabs-content {
    display: none;
    animation: fadeIn 0.3s ease-in-out;
    color: hsl(140 15% 15%);
    background: rgb(238 238 238);
    padding: 20px 30px;
    border-radius: 10px;
  }

  .custom-tabs-content.active {
    display: block;
  }
  .custom-tabs-nav-item {
    list-style-type: none;
  }
  .custom-tabs-content table{
    width: 100%;
  }
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @media screen and (max-width: 600px) {
    .custom-tabs-nav{
        grid-template-columns: 1fr;
    }
  }
</style>

<section class="section-{{ section.id }} section-{{ section.id }}-padding">
  <div class="page-width custom-tabs-wrapper">
    <ul class="custom-tabs-nav" role="tablist">
      {% for block in section.blocks %}
        <li class="custom-tabs-nav-item" role="presentation">
          <button
            type="button"
            class="custom-tabs-button {% if forloop.first %}active{% endif %}"
            data-tab="custom-tab-{{ block.id }}"
            role="tab"
            aria-controls="custom-tab-{{ block.id }}"
            aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
          >
            {{ block.settings.tab_title }}
          </button>
        </li>
      {% endfor %}
    </ul>

    <div class="custom-tabs-content-wrapper">
      {% for block in section.blocks %}
        <div
          id="custom-tab-{{ block.id }}"
          class="custom-tabs-content {% if forloop.first %}active{% endif %}"
          role="tabpanel"
          aria-labelledby="custom-tab-{{ block.id }}"
        >
          {% if block.settings.tab_title == 'Review' or block.settings.tab_title == 'Reviews' %}
            <!-- Start of Judge.me code --> 
              <div style='clear:both'></div> 
              <div id='judgeme_product_reviews' class='jdgm-widget jdgm-review-widget' data-product-title='{{ product.title | escape }}' data-id='{{ product.id }}' data-auto-install='false'> 
                {{ product.metafields.judgeme.widget }} 
              </div> 
            <!-- End of Judge.me code -->
          {% endif %}
          {% if block.type == 'app' %}
            {% render block %}
          {% else %}
          {% if block.settings.custom_liquid != blank %}
            {{ block.settings.custom_liquid }}
          {% elsif block.settings.page_content != blank %}
            {{ pages[block.settings.page_content].content }}
          {% elsif block.settings.tab_content != blank %}
            {{ block.settings.tab_content }}
          {% endif %}
          {% endif %}
        </div>
      {% endfor %}
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const sectionId = '{{ section.id }}';
    const wrapper = document.querySelector(`.section-${sectionId}`);
    if (!wrapper) return;

    const buttons = wrapper.querySelectorAll('.custom-tabs-button');
    const contents = wrapper.querySelectorAll('.custom-tabs-content');

    buttons.forEach(button => {
      button.addEventListener('click', () => {
        const tabId = button.dataset.tab;

        buttons.forEach(btn => btn.classList.remove('active'));
        contents.forEach(tab => tab.classList.remove('active'));

        button.classList.add('active');
        wrapper.querySelector(`#${tabId}`).classList.add('active');
      });
    });
  });
</script>

{% schema %}
{
  "name": "Custom Tabs",
  "tag": "section",
  "class": "custom-tabs-section",
  "settings": [
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
        "type": "tab",
        "name": "Custom Tab",
        "settings": [
        {
            "type": "text",
            "id": "tab_title",
            "label": "Tab title",
            "default": "Details"
        },
        {
            "type": "richtext",
            "id": "tab_content",
            "label": "Rich text content"
        },
        {
            "type": "page",
            "id": "page_content",
            "label": "Select a page"
        },
        {
            "type": "liquid",
            "id": "custom_liquid",
            "label": "Custom Liquid code",
            "info": "Use Liquid to render dynamic content like product metafields or custom HTML."
        }
        ]
    },
    {
        "type": "@app"
    }
  ],
  "presets": [
    {
      "name": "Custom Tabs",
      "category": "Product"
    }
  ]
}
{% endschema %}
